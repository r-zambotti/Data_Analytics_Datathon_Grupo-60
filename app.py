# Importar bibliotecas
import streamlit as st
import pandas as pd
# import numpy as np
# import matplotlib.pyplot as plt
# import statsmodels.api as sm
# import seaborn as sns
# import plotly.graph_objects as go
# import plotly.express as px
# import pmdarima as pm
import requests

#from keras.models import Sequential
#from keras.layers import LSTM, Dense
# from plotly.subplots import make_subplots
# from prophet import Prophet
# from prophet.plot import plot_plotly
# from statsmodels.tsa.seasonal import seasonal_decompose
# from statsmodels.tsa.stattools import acf, pacf, adfuller
# from statsmodels.graphics.tsaplots import plot_acf, plot_pacf
# from sklearn.metrics import mean_absolute_error, mean_squared_error,accuracy_score
# from sklearn.preprocessing import MinMaxScaler

# from sklearn.model_selection import TimeSeriesSplit
# from statsmodels.tsa.stattools import adfuller

from PIL import Image

# import pickle

from utils import (normality_test, 
                   create_warning, 
                   create_quote, 
                   create_curiosity, 
                   create_insight, 
                   create_analysis, 
                   insert_image)

# layout
st.set_page_config(layout='centered', 
                   page_title='Associa√ß√£o Passos M√°gicos - Tech Challenge - FIAP', 
                   page_icon='üåü', initial_sidebar_state='auto')

#Dados
url = "https://github.com/wesleyesantos/Postech-Datathon/raw/main/PEDE_PASSOS_DATASET_FIAP.csv"
url1 = "https://github.com/4ca63473-734d-4d8c-8181-9635c1837ddc"
response = requests.get(url)
csv_data = response.content
response1 = requests.get(url1)
file_data = response1.content

# pagina√ß√£o
page_0 = 'Introdu√ß√£o ‚ú®'
page_1 = 'An√°lise Explorat√≥ria üé≤'
page_2 = 'Dashboard üìà'
page_3 = 'Conclus√£o üìå'
page_4 = 'Refer√™ncias üìñ'

# menu lateral
st.sidebar.title('Menu')
page = st.sidebar.radio('Selecione a p√°gina:', 
                        [page_0, page_1, page_2, page_3, page_4])
        
# Introdu√ß√£o
if page == page_0:
    
    # t√≠tulo da p√°gina
    st.title('Impacto causado pela ONG Passos M√°gicos üí´')
    
    # descri√ß√£o
    st.markdown('''
                Analisando impacto causado pelas a√ß√µes volunt√°rias da ONG Passos M√°gicos, desenvolvendo uma an√°lise explorat√≥ria, gerando insight e dashboard interativos.<br> 
                <br>Desenvolvido para a <b>P√≥s-Tech Data Analytics ‚Äî FIAP</b>.
                ''', unsafe_allow_html=True)

    st.markdown('<br>', unsafe_allow_html=True)
    
    create_warning('Importante', 
                   '''
                        Este artigo tem fins exclusivamente educacionais.<br><br>
                        Para acessar os Dados do projeto, clicar na op√ß√£o abaixo "Nota T√©cnica". 
                    ''')
    
    st.markdown('<br>', unsafe_allow_html=True)

    # expans√£o com nota t√©cnica
    with st.expander('üóíÔ∏è Nota T√©cnica'):
        st.markdown('''
        #### Dados do projeto

        **üöÄ Objetivo**: Analisar impacto causado pela ONG Passos M√°gicos.

        ---
        
        **üõ∏ Modelos**: os dados utilizados para an√°lise e treinamento no modelo foram coletados em 18/05/2024 e correspondem ao per√≠odo de 20/05/1987 a 13/05/2024.
        - [XGBoost](https://xgboost.readthedocs.io/en/stable/)
        - [Prophet](https://facebook.github.io/prophet/)

        ---
        
        **üì° Base de Dados e Dicion√°rio**:
        ''')

        tab9, tab10 = st.tabs(tabs=['Base de Dados', 'Dicion√°rio'])

        with tab9:
            st.markdown('''Base de dados PEDE (Pesquisa Extensiva do Desenvolvimento Educacional)''',unsafe_allow_html=True)
            
            st.download_button(label="Baixar Base PEDE (csv)",data=csv_data,file_name="PEDE_PASSOS_DATASET_FIAP.csv",mime="text/csv")

        with tab10:
            st.markdown('''###### <font color='blue'>Estrutura da Base''',unsafe_allow_html=True)
            st.download_button(label="Dicion√°rio da base PEDE",data=file_data,file_name="Dicion√°rio dados PEDE.pdf",mime="application/pdf")

            st.markdown('''###### <font color='blue'>Estrutura da Base''',unsafe_allow_html=True)
            data_dict = {
            "INSTITUICAO_ENSINO_ALUNO_2020": "Mostra institui√ß√£o de Ensino do Aluno em 2020",
            "NOME": "Nome do Aluno (dados est√£o anonimizados)",
            "IDADE_ALUNO_2020": "Idade do Aluno em 2020",
            "PEDRA_2020": "Classifica√ß√£o do Aluno baseado no n√∫mero do INDE (2020), o conceito de classifica√ß√£o √© dado por: Quartzo ‚Äì 2,405 a 5,506 / √Ågata ‚Äì 5,506 a 6,868 / Ametista ‚Äì 6,868 a 8,230 / Top√°zio ‚Äì 8,230 a 9,294",
            "IAA_2020": "Indicador de Auto Avalia√ß√£o ‚Äì M√©dia das Notas de Auto Avalia√ß√£o do Aluno em 2020",
            "IEG_2020": "Indicador de Engajamento ‚Äì M√©dia das Notas de Engajamento do Aluno em 2020",
            "IPS_2020": "Indicador Psicossocial ‚Äì M√©dia das Notas Psicossociais do Aluno em 2020",
            "IDA_2020": "Indicador de Aprendizagem - M√©dia das Notas do Indicador de Aprendizagem 2020",
            "IPP_2020": "Indicador Psicopedag√≥gico ‚Äì M√©dia das Notas Psicopedag√≥gicas do Aluno em 2020",
            "IPV_2020": "Indicador de Ponto de Virada ‚Äì M√©dia das Notas de Ponto de Virada do Aluno em 2020",
            "IAN_2020": "Indicador de Adequa√ß√£o ao N√≠vel ‚Äì M√©dia das Notas de Adequa√ß√£o do Aluno ao n√≠vel atual em 2020",
            "INDE_2020": "√çndice do Desenvolvimento Educacional ‚Äì M√©trica de Processo Avaliativo Geral do Aluno, dado pela pondera√ß√£o dos indicadores: IAN, IDA, IEG, IAA, IPS, IPP e IPV em 2020.",
            "DESTAQUE_IEG_2020": "Observa√ß√µes dos Avaliadores Sobre o Aluno referente ao 'Indicador de Engajamento' em 2020",
            "DESTAQUE_IDA_2020": "Observa√ß√µes dos Avaliadores Sobre o Aluno referente ao 'Indicador de Aprendizagem' em 2020",
            "DESTAQUE_IPV_2020": "Observa√ß√µes dos Avaliadores Sobre o Aluno referente ao 'Indicador de Ponto de Virada' em 2020",
            "PONTO_VIRADA_2020": "Campo do Tipo Booleano que sinaliza se o Aluno atingiu o 'Ponto de Virada' em 2020",
            "PEDRA_2021": "Classifica√ß√£o do Aluno baseado no n√∫mero do INDE (2021), o conceito de classifica√ß√£o √© dado por: Quartzo ‚Äì 2,405 a 5,506 / √Ågata ‚Äì 5,506 a 6,868 / Ametista ‚Äì 6,868 a 8,230 / Top√°zio ‚Äì 8,230 a 9,294",
            "IAA_2021": "Indicador de Auto Avalia√ß√£o ‚Äì M√©dia das Notas de Auto Avalia√ß√£o do Aluno em 2021",
            "IEG_2021": "Indicador de Engajamento ‚Äì M√©dia das Notas de Engajamento do Aluno em 2021",
            "IPS_2021": "Indicador Psicossocial ‚Äì M√©dia das Notas Psicossociais do Aluno em 2021",
            "IDA_2021": "Indicador de Aprendizagem - M√©dia das Notas do Indicador de Aprendizagem 2021",
            "IPP_2021": "Indicador Psicopedag√≥gico ‚Äì M√©dia das Notas Psicopedag√≥gicas do Aluno em 2021",
            "IPV_2021": "Indicador de Ponto de Virada ‚Äì M√©dia das Notas de Ponto de Virada do Aluno em 2021",
            "IAN_2021": "Indicador de Adequa√ß√£o ao N√≠vel ‚Äì M√©dia das Notas de Adequa√ß√£o do Aluno ao n√≠vel atual em 2021",
            "INDE_2021": "√çndice do Desenvolvimento Educacional ‚Äì M√©trica de Processo Avaliativo Geral do Aluno, dado pela pondera√ß√£o dos indicadores: IAN, IDA, IEG, IAA, IPS, IPP e IPV em 2021.",
            "REC_EQUIPE_1_2021": "Recomenda√ß√£o: da Equipe de Avali√ß√£o: 1 em 2021",
            "REC_EQUIPE_2_2021": "Recomenda√ß√£o: da Equipe de Avali√ß√£o: 2 em 2021",
            "REC_EQUIPE_3_2021": "Recomenda√ß√£o: da Equipe de Avali√ß√£o: 3 em 2021",
            "REC_EQUIPE_4_2021": "Recomenda√ß√£o: da Equipe de Avali√ß√£o: 4 em 2021",
            "REC_PSICO_2021": "Mostra qual a recomenda√ß√£o da equipe de psicologia sobre o Aluno em 2021",
            "PONTO_VIRADA_2021": "Campo do Tipo Booleano que sinaliza se o Aluno atingiu o 'Ponto de Virada' em 2021",
            "PEDRA_2022": "Classifica√ß√£o do Aluno baseado no n√∫mero do INDE (2022), o conceito de classifica√ß√£o √© dado por: Quartzo ‚Äì 2,405 a 5,506 / √Ågata ‚Äì 5,506 a 6,868 / Ametista ‚Äì 6,868 a 8,230 / Top√°zio ‚Äì 8,230 a 9,294",
            "IAA_2022": "Indicador de Auto Avalia√ß√£o ‚Äì M√©dia das Notas de Auto Avalia√ß√£o do Aluno em 2022",
            "IEG_2022": "Indicador de Engajamento ‚Äì M√©dia das Notas de Engajamento do Aluno em 2022",
            "IPS_2022": "Indicador Psicossocial ‚Äì M√©dia das Notas Psicossociais do Aluno em 2022",
            "IDA_2022": "Indicador de Aprendizagem - M√©dia das Notas do Indicador de Aprendizagem 2022",
            "IPP_2022": "Indicador Psicopedag√≥gico ‚Äì M√©dia das Notas Psicopedag√≥gicas do Aluno em 2022",
            "IPV_2022": "Indicador de Ponto de Virada ‚Äì M√©dia das Notas de Ponto de Virada do Aluno em 2022",
            "IAN_2022": "Indicador de Adequa√ß√£o ao N√≠vel ‚Äì M√©dia das Notas de Adequa√ß√£o do Aluno ao n√≠vel atual em 2022",
            "INDE_2022": "√çndice do Desenvolvimento Educacional ‚Äì M√©trica de Processo Avaliativo Geral do Aluno, dado pela pondera√ß√£o dos indicadores: IAN, IDA, IEG, IAA, IPS, IPP e IPV em 2022.",
            "REC_PSICO_2022": "Mostra qual a recomenda√ß√£o da equipe de psicologia sobre o Aluno em 2022",
            "REC_AVA_1_2022": "Recomenda√ß√£o da Equipe de Avali√ß√£o 1 em 2022",
            "REC_AVAL_2_2022": "Recomenda√ß√£o da Equipe de Avali√ß√£o: 2 em 2022",
            "REC_AVAL_3_2022": "Recomenda√ß√£o da Equipe de Avali√ß√£o: 3 em 2022",
            "REC_AVAL_4_2022": "Recomenda√ß√£o da Equipe de Avali√ß√£o: 4 em 2022",
            "DESTAQUE_IEG_2022": "Observa√ß√µes dos Mestres Sobre o Aluno referente ao 'Indicador de Engajamento' em 2022",
            "DESTAQUE_IDA_2022": "Observa√ß√µes dos Mestres Sobre o Aluno referente ao 'Indicador de Aprendizagem' em 2022",
            "DESTAQUE_IPV_2022": "Observa√ß√µes dos Mestres Sobre o Aluno referente ao 'Indicador de Ponto de Virada' em 2022",
            "PONTO_VIRADA_2022": "Campo do Tipo Booleano que sinaliza se o Aluno atingiu o 'Ponto de Virada' em 2022",
            "INDICADO_BOLSA_2022": "Campo do Tipo Booleano que sinaliza se o Aluno foi indicado para alguma Bolsa no Ano de 2022"
            }

            df = pd.DataFrame(list(data_dict.items()), columns=["Nome da Coluna", "Detalhamento dos dados"])

            st.markdown('''A base cont√©m 50 colunas referente ao per√≠odo de 2020 a 2022, com colunas adicionais no decorrer dos anos.''', unsafe_allow_html=True)

            st.table(df)    
            
        st.markdown('''        
        ---
        
        **üì° Fontes de dados**:
        - [IPEA](http://www.ipeadata.gov.br/Default.aspx)
        - [FRED](https://fred.stlouisfed.org/series/DCOILBRENTEU)
        - [Yahoo Finance](https://finance.yahoo.com/quote/CL=F?p=CL=F)

        ---
        
        **üßëüèª‚ÄçüöÄ Autores**: 
        - [Victor Novais de Oliveira](https://www.linkedin.com)
        - [Rodrigo Zambotti de Andrade](https://www.linkedin.com)
        - [Arencio Job Pereira](https://www.linkedin.com)  
        - [Bruno Akio Matsuzaki Shimada](https://www.linkedin.com)                     

        ---
        
        **ü™ê Reposit√≥rio**: 
        - [GitHub](https://github.com/r-zambotti/Data_Analytics_Datathon_Grupo-60.git)

        ---
        
        ''')
    
    st.markdown('---')
    
    # contexto para o objeto de estudo
    st.markdown('## Sobre a Associa√ß√£o Passos M√°gicos')
    
    st.markdown('''
                <p style="font-size: 18px">
                A Associa√ß√£o Passos M√°gicos tem uma trajet√≥ria de 30 anos de atua√ß√£o, trabalhando na transforma√ß√£o da vida de crian√ßas e jovens de baixa renda os levando a melhores oportunidades de vida.<br>

                A transforma√ß√£o, idealizada por Michelle Flues e Dimetri Ivanoff, come√ßou em 1992, atuando dentro de orfanatos, no munic√≠pio de Embu-Gua√ßu.
                Em 2016, depois de anos de atua√ß√£o, decidem ampliar o programa para que mais jovens tivessem acesso a essa f√≥rmula m√°gica para transforma√ß√£o.
                Passaram ent√£o a atuar como um projeto social e educacional, criando assim a Associa√ß√£o Passos M√°gicos.
                </p>
                ''', unsafe_allow_html=True)  
    
    create_quote('''
            "Investir em educa√ß√£o √© plantar as sementes de um futuro promissor para cada crian√ßa".<br>
            ''','- Associa√ß√£o Passos M√°gicos')

    # contexto miss√£o, programas e impactos - menu de tabelas
    tab1, tab2, tab3 = st.tabs(
    tabs=["Miss√£o e Vis√£o", "Programas e Atividades", "Impacto e Resultados"])

    with tab1:
        st.markdown('''
                    <p style="font-size: 18px">
                    üéØ<b> Miss√£o:</b> A miss√£o da Passos M√°gicos √© transformar a vida de jovens e crian√ßas, fornecendo ferramentas que os levem a melhores oportunidades de vida. <br><br>
                    üëÅ <b> Vis√£o:</b> A vis√£o da organiza√ß√£o √© viver em um Brasil onde todas as crian√ßas e jovens tenham iguais oportunidades para realizar seus sonhos e se tornem agentes transformadores de suas pr√≥prias vidas.
                    </p>
                    ''', unsafe_allow_html=True)

    with tab2:
        st.markdown(''' 
                    <p style="font-size: 18px">
                    A Passos M√°gicos oferece uma variedade de programas educacionais e de apoio, incluindo:
                    </p>
                    ''', unsafe_allow_html=True)
        
        st.markdown('''- <b>Educa√ß√£o de qualidade:</b> Acesso a ensino de alta qualidade para crian√ßas e jovens;            
                    ''', unsafe_allow_html=True)
        
        st.markdown('''- <b>Assist√™ncia psicol√≥gica e psicopedag√≥gica:</b> Suporte emocional e educacional para ajudar no desenvolvimento integral dos alunos;
                    ''', unsafe_allow_html=True)
        
        st.markdown('''- <b>Amplia√ß√£o da vis√£o de mundo: </b>Projetos de interc√¢mbio e apadrinhamento que visam integrar os alunos a diferentes culturas e ambientes;
                    ''', unsafe_allow_html=True)
        
        st.markdown('''- <b>Campanhas de arrecada√ß√£o:</b> Anualmente, s√£o promovidas campanhas para arrecadar fundos e presentes para as crian√ßas e adolescentes atendidos pela institui√ß√£o.
                    ''', unsafe_allow_html=True)

    with tab3:
        st.markdown('''
                    <p style="font-size: 18px">
                    Desde sua funda√ß√£o, a Passos M√°gicos tem expandido significativamente seu alcance e impacto. 
                    Em 2016, a organiza√ß√£o formalizou-se como um projeto social e educacional, ampliando suas atividades para beneficiar mais jovens. Atualmente, 
                    a institui√ß√£o atende centenas de crian√ßas e adolescentes, oferecendo bolsas de estudo, suporte psicol√≥gico e oportunidades de interc√¢mbio.
                    </p>
                    ''', unsafe_allow_html=True)
        
    st.markdown('---')

    # Inserindo imagem da ONG Passos M√°gicos

    image =  Image.open("img/passos_magicos.png")
    st.image(image, caption= "Imagem oficial da ONG Passos M√°gicos")
    
# An√°lise Explorat√≥ria
elif page == page_1:

    st.title('An√°lise Explorat√≥ria üîé')
    st.markdown('<br>', unsafe_allow_html=True)
    
    st.markdown('''
                A an√°lise Explorat√≥ria do projeto foi realizada com a base <b><font color='blue'>PEDE (Pesquisa Extensiva do Desenvolvimento Educacional)</b></font> da Passos M√°gicos e foi disponibilizada toda documenta√ß√£o 
                explicando como foram criadas cada √≠ndice e m√©tricas j√° existentes. A PASSOS M√ÅGICOS utiliza uma m√©trica chamada <b><font color='blue'>INDE (√çndice Nacional de Desenvolvimento Educacional)</b></font> para avaliar 
                os alunos essa m√©trica √© composta por alguns indicadores que s√£o separados em 3 dimens√µes principais onde avaliam v√°rios crit√©rios como adequa√ß√£o de n√≠vel, desempenho acad√™mico, engajamento, autoavalia√ß√£o, aspectos 
                psicossociais e psicopedag√≥gicos, essas dimens√µes est√£o divididas conforme abaixo e cada uma delas trazem os seguintes indicadores:
                ''', unsafe_allow_html=True)
    
    st.markdown('''
                - Dimens√£o acad√™mica: Com os indicadores IEG, IDA e IAN
                ''',  unsafe_allow_html=True)
    
    st.markdown('''
                - Dimens√£o psicossocial: Com os indicadores IAA e IPS
                ''',  unsafe_allow_html=True)
    
    st.markdown('''
                - Dimens√£o psicopedag√≥gica: Com os indicadores IPP e IPV
                ''',  unsafe_allow_html=True)

    st.markdown('''
                Quanto ao <b><font color='blue'>INDE </b></font> geral tem uma m√©dia de 7,07, obtendo uma varia√ß√£o bem grande entre o m√≠nimo de 2,46 e m√°ximo de 9,71; 
                ao realizar a an√°lise por ano podemos observar que tem um aumento na quantidade de alunos e os n√≠veis do INDE caem, nos trazendo o desafio de come√ßar a segregar essa informa√ß√£o para buscar o gap.
                ''', unsafe_allow_html=True) 

    st.markdown('''
                O indicador <b><font color='blue'>IDA</b></font> se sobresai como o mais baixo de todos os anos que √© um indicador de participa√ß√£o dos projetos e atividades pedag√≥gicas, 
                e devido a esse defasamento o maior indicador que temos √© o <b><font color='blue'>IAA</b></font> que √© o indice de aten√ß√£o psicol√≥gica e psicopedag√≥gica aos alunos.
                ''', unsafe_allow_html=True)

    #An√°lise dos Indicadores
    st.subheader('An√°lise dos Indicadores', divider='orange')

    #Divindo cada indicador em selectbox para melhor visualiza√ß√£o
    indicador = st.selectbox('Selecione o indicador:', ['INDE','Pedras','IEG', 'IDA', 'IAN', 'IAA', 'IPS', 'IPP', 'IPV', 'Ponto de Virada'])

    #Tabela INDE
    if indicador == 'INDE':
        
        st.markdown('''
                    <p style="font-size: 18px">
                    O <b><font color='blue'>√çndice de Desenvolvimento Educacional (INDE)</b></font> da Associa√ß√£o Passos M√°gicos √© uma m√©trica utilizada para avaliar o progresso educacional dos alunos atendidos pela institui√ß√£o. 
                    Esse √≠ndice √© calculado com base em diversos fatores, incluindo:
                    </p>
                    ''', unsafe_allow_html=True)    
        
        st.markdown('''
                    - <b><font color='blue'>Desempenho Acad√™mico:</b></font> Avalia√ß√£o das notas dos alunos em disciplinas como Portugu√™s, Matem√°tica e Ingl√™s.
                    ''', unsafe_allow_html=True)
        
        st.markdown('''
                    - <b><font color='blue'>Apoio Psicol√≥gico e Psicopedag√≥gico:</b></font> Impacto das interven√ß√µes psicol√≥gicas e psicopedag√≥gicas no desenvolvimento dos alunos.
                    ''', unsafe_allow_html=True)
        
        st.markdown('''
                    - <b><font color='blue'>Participa√ß√£o em Atividades Extracurriculares:</b></font> Envolvimento dos alunos em atividades que ampliam sua vis√£o de mundo, como interc√¢mbios e projetos culturais.
                    ''', unsafe_allow_html=True)
        
        st.markdown('''
                    - <b><font color='blue'>Evolu√ß√£o ao Longo do Ano:</b></font> Compara√ß√£o das notas e do desenvolvimento dos alunos entre o in√≠cio e o final do ano letivo.
                    ''', unsafe_allow_html=True)
        
        st.markdown('''
                    <p style="font-size: 18px">
                    O INDE √© uma ferramenta crucial para a Passos M√°gicos, pois permite monitorar e ajustar suas estrat√©gias educacionais, garantindo que cada aluno receba o suporte necess√°rio para alcan√ßar seu pleno potencial.
                    </p>
                    ''', unsafe_allow_html=True)

    #Tabela Pedras
    if indicador == 'Pedras':

        st.markdown('''
                    As <b><font color='blue'>Pedras</b></font> podem ser definidas como o quanto os alunos est√£o pontuando, ent√£o ele entra num esquema de classifica√ß√£o, 
                    o que traz mais clareza na an√°lise e aten√ß√£o para o desenvolvimento de cada aluno e tamb√©m d√° uma vis√£o mais competitiva aos alunos, por√©m eles ir√£o almejar as melhores classifica√ß√µes. 
                    At√© o √∫ltimo relat√≥rio PEDE tinhamos 4 pedras que s√£o:
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    - <b><font color='blue'>Quartzo:</b></font> Alunos com INDE entre <b><font color='blue'>2,405 a 5,506</b></font>.
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    - <b><font color='blue'>√Ågata:</b></font> Alunos com INDE entre <b><font color='blue'>5,506 a 6,868</b></font>.
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    - <b><font color='blue'>Ametista:</b></font> Alunos com INDE entre <b><font color='blue'>6,868 a 8,230</b></font>.
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    - <b><font color='blue'>Top√°zio:</b></font> Alunos com INDE entre <b><font color='blue'>8,230 a 9,294</b></font>.
                    ''',unsafe_allow_html=True)
        
    #Tabela IEG    
    if indicador == 'IEG':

        st.markdown('''
                    ###### <font color='blue'>IEG (√çndice de Engajamento Global)
                    ''',unsafe_allow_html=True )
        
        st.markdown('''
                    Avalia o n√≠vel de envolvimento dos alunos em atividades extracurriculares e programas de interc√¢mbio. Este √≠ndice √© importante para entender como as experi√™ncias 
                    fora da sala de aula contribuem para o desenvolvimento pessoal e acad√™mico dos alunos.
                    ''')

    #Tabela IDA
    if indicador == 'IDA':

        st.markdown('''
                    ###### <font color='blue'>IDA (√çndice de Desenvolvimento Acad√™mico)
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    Mede o progresso acad√™mico dos alunos, considerando notas, frequ√™ncia escolar e participa√ß√£o em atividades educacionais. 
                    Este √≠ndice ajuda a identificar √°reas que necessitam de melhorias e a efic√°cia das interven√ß√µes pedag√≥gicas.
                    ''')

    #Tabela IAN
    if indicador == 'IAN':

        st.markdown('''
                    ######  <font color='blue'>IAN (√çndice de Aproveitamento Nutricional)
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    Avalia a qualidade da alimenta√ß√£o fornecida √†s crian√ßas e jovens, medindo o impacto da nutri√ß√£o no desempenho escolar e no bem-estar geral dos alunos.
                    ''')
        
    #Tabela IAA
    if indicador == 'IAA':

        st.markdown('''
                    ######  <font color='blue'>IAA (√çndice de Atendimento e Acompanhamento)
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    Mede a qualidade e a frequ√™ncia do atendimento psicol√≥gico e psicopedag√≥gico oferecido aos alunos. 
                    Este √≠ndice √© crucial para garantir que os alunos recebam o suporte necess√°rio para superar desafios emocionais e acad√™micos.
                    ''')
        
    #Tabela IPS
    if indicador == 'IPS':

        st.markdown('''
                    ######  <font color='blue'>IPS (√çndice de Participa√ß√£o Social)
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    Avalia o envolvimento dos alunos em atividades comunit√°rias e projetos sociais. Este √≠ndice ajuda a medir o impacto dos programas da Passos M√°gicos na forma√ß√£o de cidad√£os conscientes e ativos na sociedade.
                    ''')
        
    #Tabela IPP
    if indicador == 'IPP':

        st.markdown('''
                    ###### <font color='blue'>IPP (√çndice de Progresso Pessoal)
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    Mede o desenvolvimento pessoal dos alunos, considerando aspectos como autoestima, habilidades sociais e resili√™ncia. 
                    Este √≠ndice √© importante para avaliar o impacto das interven√ß√µes da Passos M√°gicos no crescimento pessoal dos alunos.
                    ''')
        
    #Tabela IPV
    if indicador == 'IPV':

        st.markdown('''
                    ###### <font color='blue'>IPV (√çndice de Perman√™ncia e Valoriza√ß√£o)
                    ''',unsafe_allow_html=True)
        
        st.markdown('''
                    Avalia a taxa de reten√ß√£o dos alunos nos programas da Passos M√°gicos e a valoriza√ß√£o dos mesmos pelos benefici√°rios e suas fam√≠lias. 
                    Este √≠ndice √© fundamental para entender a satisfa√ß√£o e o comprometimento dos alunos com os programas oferecidos.
                    ''')
        
    #Tabela Ponto de Virada   
    if indicador == 'Ponto de Virada':
        
        st.markdown(''' 
                    O Ponto de virada indica que o aluno atingiu um passo m√°gico, √© a conquista de uma habilidade fundamental, 
                    √© medido atrav√©s das notas, avalia√ß√µes e outros dados, e demonstra que o aluno teve um grande progresso, 
                    essa evolu√ß√£o o ajudar√° a enfrentar v√°rios desafios que encontrar√° pela frente, assim como:
                    ''' )
        
        st.markdown('''
                    - Os alunos poder√£o superar dificuldades em mat√©rias espec√≠ficas e melhorar seu desempenho acad√™mico,
                    - Isso pode incluir avan√ßos em leitura, matem√°tica, ci√™ncias e outras √°reas,
                    - O ponto de virada traz consigo uma sensa√ß√£o de realiza√ß√£o e confian√ßa,
                    - Os alunos se sentir√£o mais capazes e confiantes em suas habilidades,
                    - Eles desenvolver√£o habilidades de comunica√ß√£o, resolu√ß√£o de conflitos, empatia e trabalho em equipe,
                    - Isso os ajudar√° a lidar com situa√ß√µes sociais e emocionais,
                    - O ponto de virada tamb√©m envolve uma amplia√ß√£o da vis√£o de mundo,
                    - Os alunos estar√£o mais abertos a diferentes culturas, perspectivas e oportunidades,
                    - Os alunos ser√£o incentivados a assumir o protagonismo em suas vidas,
                    - Eles tomar√£o decis√µes mais conscientes e ter√£o maior autonomia,
                    - O ponto de virada ensina a import√¢ncia da persist√™ncia e da resili√™ncia,
                    - Os alunos saber√£o que podem superar obst√°culos com esfor√ßo cont√≠nuo.
                    ''')

    # carregar dados
    # data = pd.read_parquet(r'data/data_w_indicators.parquet')
    # # sidebar - adicionar filtros
    # st.sidebar.title('‚öôÔ∏è Filtros')
    # # filtros de ano com slider
    # min_year = data.index.year.min()
    # min_year = int(min_year)
    # max_year = data.index.year.max()
    # max_year = int(max_year)
    # # filtro de pre√ßo com slider
    # min_price = data['brent'].min()
    # min_price = int(min_price)
    # max_price = data['brent'].max()
    # max_price = int(max_price)

# Dashboard
elif page == page_2:

    # t√≠tulo
    st.title('Dashboard :bar_chart:')
    
    # Carregar o DataFrame com tratamento de poss√≠veis issues
    df = pd.read_csv('https://github.com/wesleyesantos/StreamlitDatathon/raw/refs/heads/main/assets/df_aluno.csv', encoding='utf-8')  # Ajuste a codifica√ß√£o se necess√°rio
    df['ANO'] = df['ANO'].astype(str) 
    # Remover espa√ßos extras e padronizar os nomes das colunas
    df.columns = df.columns.str.strip()
    df.columns = df.columns.str.upper()

    # Verificar os nomes das colunas
    st.write("Colunas do DataFrame:", df.columns.tolist())

    # Definir a coluna 'NOME' como √≠ndice (se necess√°rio)
    df_aluno1 = df.set_index('NOME')

    # Iniciar o estado dos filtros se ainda n√£o estiverem definidos
    if 'ano_selecionado' not in st.session_state:
        st.session_state['ano_selecionado'] = None

    if 'matricula_selecionada' not in st.session_state:
        st.session_state['matricula_selecionada'] = None

    if 'indicador_selecionado' not in st.session_state:
        st.session_state['indicador_selecionado'] = None

    # Criar os widgets de filtro
    col1, col2, col3 = st.columns(3)

    with col1:
        anos_disponiveis = sorted(df['ANO'].unique())
        ano_selecionado = st.selectbox('Selecione o ano', [None] + list(anos_disponiveis), key='ano_selecionado')

    with col2:
        # Use o nome de coluna padronizado
        matriculas_disponiveis = sorted(df['MATRICULA'].unique())
        matricula_selecionada = st.selectbox('Selecione a matr√≠cula', [None] + list(matriculas_disponiveis), key='matricula_selecionada')

    with col3:
        indicadores_disponiveis = ["INDE", "IAA", "IEG", "IPS", "IDA", "IPP", "IAN", "IPV"]
        indicador_selecionado = st.selectbox('Selecione o indicador', [None] + indicadores_disponiveis, key='indicador_selecionado')

    # Fun√ß√£o para limpar os filtros
    def reset_filters():
        st.session_state['ano_selecionado'] = None
        st.session_state['matricula_selecionada'] = None
        st.session_state['indicador_selecionado'] = None

    st.button('Limpar Filtros', on_click=reset_filters)

    # Aplicar os filtros selecionados
    df_filtrado1 = df_aluno1.copy()

    if ano_selecionado:
        df_filtrado1 = df_filtrado1[df_filtrado1['ANO'] == ano_selecionado]

    if matricula_selecionada:
        df_filtrado1 = df_filtrado1[df_filtrado1['MATRICULA'] == matricula_selecionada]

    # Exibir o DataFrame filtrado
    st.dataframe(df_filtrado1.reset_index())

    # Fun√ß√£o para criar containers personalizados
    def criar_container_titulo(conteudo_html):
        return st.markdown(conteudo_html, unsafe_allow_html=True)

    # Atualizar os quadros com base no filtro selecionado

    # Cria√ß√£o dos containers
    cols_container = st.columns(2, gap="small")

    with cols_container[0]:
        quadro = cols_container[0].container()
        total_alunos = len(df_filtrado1)
        quadro.markdown(f'''
                        <p style="font-size: 50px; text-align: center;">
                        <br> <b>{total_alunos}</b><br>
                        </p>
                        ''', unsafe_allow_html=True)

        quadro.markdown('''
                        <p style="font-size: 34px; text-align: center;">
                        <b>Alunos Matriculados</b>
                        </p>
                        ''', unsafe_allow_html=True)

    with cols_container[1]:

        cols_container1 = st.columns(2, gap="small")
        with cols_container1[0]:
            # Calcular o total Masculino
            total_masculino = df_filtrado1[df_filtrado1['SEXO'] == 'Masculino']['SEXO'].count()
            quadro = cols_container1[0].container()
            quadro.markdown(f'''
                            <p style="font-size: 36px; text-align: center; color: lightblue;">
                            üë®üèª‚Äçüéì<br>
                            <b>{total_masculino}</b>
                            </p>
                            ''', unsafe_allow_html=True)
            quadro.markdown('''
                            <p style="font-size: 20px; text-align: center;">
                            <b>Alunos Masculinos</b>
                            </p>
                            ''', unsafe_allow_html=True)

        with cols_container1[1]:
            # Calcular o total Feminino
            total_feminino = df_filtrado1[df_filtrado1['SEXO'] == 'Feminino']['SEXO'].count()
            quadro = cols_container1[1].container()
            quadro.markdown(f'''
                            <p style="font-size: 36px; text-align: center; color: pink;">
                            üë©üèº‚Äçüéì<br>
                            <b>{total_feminino}</b>
                            </p>
                            ''', unsafe_allow_html=True)
            quadro.markdown('''
                            <p style="font-size: 20px; text-align: center;">
                            <b>Alunas Femininas</b>
                            </p>
                            ''', unsafe_allow_html=True)

        cols_container2 = st.columns(2, gap="small")
        with cols_container2[0]:
            # Calcular a porcentagem de alunos masculinos
            if total_alunos > 0:
                perc_masculino = (total_masculino / total_alunos) * 100
            else:
                perc_masculino = 0
            quadro = cols_container2[0].container()
            quadro.markdown(f'''
                            <p style="font-size: 30px; text-align: center; color: lightblue;">
                            <b>{perc_masculino:.2f}% Masculino</b>
                            </p>
                            ''', unsafe_allow_html=True)    

        with cols_container2[1]:
            # Calcular a porcentagem de alunos femininos
            if total_alunos > 0:
                perc_feminino = (total_feminino / total_alunos) * 100
            else:
                perc_feminino = 0
            quadro = cols_container2[1].container()
            quadro.markdown(f'''
                            <p style="font-size: 30px; text-align: center; color: pink;">
                            <b>{perc_feminino:.2f}% Feminino</b>
                            </p>
                            ''', unsafe_allow_html=True)

    cols_container3 = st.columns(2, gap="small")
    with cols_container3[0]:

        # Exibir a contagem de alunos por tipo de matr√≠cula
        tipos_matricula = df_filtrado1['MATRICULA'].unique()
        cols_matricula = st.columns(len(tipos_matricula), gap="small")
        for i, tipo in enumerate(tipos_matricula):
            total_tipo = len(df_filtrado1[df_filtrado1['MATRICULA'] == tipo])
            with cols_matricula[i]:
                quadro = cols_matricula[i].container()
                quadro.markdown(f'''
                                <p style="font-size: 30px; text-align: center;">
                                <b>{total_tipo}<br>
                                {tipo}</b>
                                </p>
                                ''', unsafe_allow_html=True)

    with cols_container3[1]:
        # Exibir a m√©dia do indicador selecionado
        if indicador_selecionado:
            if indicador_selecionado in df_filtrado1.columns:
                media_indicador = df_filtrado1[indicador_selecionado].mean()
                quadro = cols_container3[1].container()
                quadro.markdown(f'''
                                <p style="font-size: 50px; text-align: center;">
                                <b>{media_indicador:.2f}</b>
                                </p>
                                ''', unsafe_allow_html=True)

                quadro.markdown(f'''
                                <p style="font-size: 34px; text-align: center;">
                                <b>M√©dia do indicador {indicador_selecionado}</b>
                                </p>
                                ''', unsafe_allow_html=True)
            else:
                quadro = cols_container3[1].container()
                quadro.markdown(f'''
                                <p style="font-size: 34px; text-align: center; color: red;">
                                <b>Indicador "{indicador_selecionado}" n√£o encontrado nos dados.</b>
                                </p>
                                ''', unsafe_allow_html=True)
        else:
            quadro = cols_container3[1].container()
            quadro.markdown('''
                            <p style="font-size: 34px; text-align: center;">
                            <b>Selecione um indicador para ver a m√©dia</b>
                            </p>
                            ''', unsafe_allow_html=True)

    # # Obter as op√ß√µes √∫nicas para cada filtro
    # anos = df['ANO'].unique()
    # turmas = df['TURMA'].unique()
    # pedras = df['PEDRA'].unique()

    # # Criar os filtros dentro de containers
    # filtro_container = st.container()
    # resultado_container = st.container()

    # with filtro_container:
    #     st.markdown("### Filtros")
    #     col1, col2, col3 = st.columns(3)
        
    #     with col1:
    #         ano_selecionado = st.multiselect('Ano', sorted(anos), default=sorted(anos))
    #     with col2:
    #         turma_selecionada = st.multiselect('Turma', sorted(turmas), default=sorted(turmas))
    #     with col3:
    #         pedra_selecionada = st.multiselect('Pedra', sorted(pedras), default=sorted(pedras))

    # # Filtrar o DataFrame com base nas sele√ß√µes
    # df_filtrado = df[
    #     (df['ANO'].isin(ano_selecionado)) & 
    #     (df['TURMA'].isin(turma_selecionada)) & 
    #     (df['PEDRA'].isin(pedra_selecionada))
    # ]

    # # Exibir os resultados no container de resultados
    # with resultado_container:
    #     st.markdown("### Resultados")
    #     st.dataframe(df_filtrado.reset_index(drop=True))


    # if 'ano_selecionado' not in st.session_state:
    #     st.session_state['ano_selecionado'] = None

    # if 'matricula_selecionado' not in st.session_state:
    #     st.session_state['matricula_selecionado'] = None

    # if 'pedra_selecionada' not in st.session_state:
    #     st.session_state['pedra_selecionada'] = None

    # df_aluno1 = df.set_index('NOME')
        
    # col1, col2, col3= st.columns(3)
                        
    # with col1:
    #     anos_disponiveis = df['ANO'].unique()
    #     ano_selecionado = st.selectbox('Selecione o ano', [None] + list(anos_disponiveis), key='ano_selecionado')

    # with col2:
    #     matriculas_disponiveis = df['TURMA'].unique()
    #     matricula_selecioada = st.selectbox('Selecione a matricula', [None] + list(matriculas_disponiveis), key='matricula_selecionado')

    # with col3:
    #     pedras_disponiveis = df['PEDRA'].unique()
    #     pedra_selecionada = st.selectbox('Selecione o tipo de pedra', [None] + list(pedras_disponiveis), key='pedra_selecionada')

    # df_filtrado1 = df_aluno1.copy()

    # def reset_filters():
    #     st.session_state['ano_selecionado'] = None
    #     st.session_state['matricula_selecionado'] = None
    #     st.session_state['pedra_selecionada'] = None

    # st.button('Limpar Filtros', on_click=reset_filters)

    # if ano_selecionado:
    #     df_filtrado1 = df_filtrado1[df_filtrado1['ANO'] == ano_selecionado]

    # if matricula_selecioada:
    #     df_filtrado1 = df_filtrado1[df_filtrado1['TURMA'] == matricula_selecioada]

    # if pedra_selecionada:
    #     df_filtrado1 = df_filtrado1[df_filtrado1['PEDRA'] == pedra_selecionada]
        
    # # Fun√ß√£o para atualizar os quadros com base no filtro selecionado

    # st.dataframe(df_filtrado1)

    # cols_container = st.columns(2, gap="small")
        
    # with cols_container[0]:
    #     quadro = cols_container[0].container(height=315, border=True)
    #     quadro.markdown(f'''
    #                     <p style="font-size: 50px; text-align: center;">
    #                     <br> <b>{df_filtrado1}</b><br>
    #                     </p>
    #                     ''', unsafe_allow_html=True)
        
    #     quadro.markdown('''
    #                     <p style="font-size: 34px; text-align: center;">
    #                     <b>Alunos Matriculados</b>
    #                     </p>
    #                     ''',unsafe_allow_html=True)
    
    # with cols_container[1]:

    #     cols_container1 = st.columns(2, gap="small")
    #     with cols_container1[0]:
    #         quadro = cols_container1[0].container(height=150, border=True)
    #         quadro.markdown(f'''
    #                         <p style="font-size: 36px; text-align: center; color: pink;">
    #                         <b>{df_filtrado1 []['']}</b><br>
    #                         üë©üèº‚Äçüéì
    #                         </p>
    #                         ''', unsafe_allow_html=True)
            
    #     with cols_container1[1]:
    #         quadro = cols_container1[1].container(height=150, border=True)
    #         quadro.markdown(f'''
    #                         <p style="font-size: 36px; text-align: center; color: lightblue;">
    #                         <b>{df_filtrado1 []['']}</b><br>
    #                         üë®üèª‚Äçüéì
    #                         </p>
    #                         ''', unsafe_allow_html=True)

    #     cols_container2 = st.columns(2, gap="small")
    #     with cols_container2[0]:
    #         quadro = cols_container2[0].container(height=150, border=True)
    #         quadro.markdown(f'''
    #                         <p style="font-size: 30px; text-align: center; color: pink;">
    #                         <b>{df_filtrado1 []['']} % Feminimo</b>
    #                         </p>
    #                         ''', unsafe_allow_html=True)    
                
    #     with cols_container2[1]:
    #         quadro = cols_container2[1].container(height=150, border=True)
    #         quadro.markdown(f'''
    #                         <p style="font-size: 30px; text-align: center; color: lightblue;">
    #                         <b>{df_filtrado1 []['']} % Masculino</b>
    #                         </p>
    #                         ''', unsafe_allow_html=True)
    
    

    # cols_container3 = st.columns(2, gap="small")
    # with cols_container3[0]:

    #     cols_container4 = st.columns(2, gap="small")
    #     quadro = cols_container4[0].container(height=150, border=True)
    #     quadro.markdown(f'''
    #                         <p style="font-size: 30px; text-align: center;">
    #                         <b>{df_filtrado1 []['']}<br>
    #                         √Ågata</b>
    #                         </p>
    #                         ''', unsafe_allow_html=True)
            
    #     with cols_container4[1]:
    #         quadro = cols_container4[1].container(height=150, border=True)
    #         quadro.markdown(f'''
    #                         <p style="font-size: 30px; text-align: center;">
    #                         <b>{df_filtrado1 []['']}<br>
    #                         Ametista</b>
    #                         </p>
    #                         ''', unsafe_allow_html=True)

    #     cols_container5 = st.columns(2, gap="small")
    #     with cols_container5[0]:
    #         quadro = cols_container5[0].container(height=150, border=True)
    #         quadro.markdown(f'''
    #                         <p style="font-size: 30px; text-align: center;">
    #                         <b>{df_filtrado1 []['']} 
    #                         Quartzo</b>
    #                         </p>
    #                         ''', unsafe_allow_html=True)    
                
    #     with cols_container5[1]:
    #         quadro = cols_container5[1].container(height=150, border=True)
    #         quadro.markdown(f'''
    #                         <p style="font-size: 30px; text-align: center;">
    #                         <b>{df_filtrado1 []['']} 
    #                         Top√°zio</b>
    #                         </p>
    #                         ''', unsafe_allow_html=True)

    # with cols_container3[1]:
    #     quadro = cols_container3[1].container(height=315, border=True)
    #     quadro.markdown(f'''
    #                     <p style="font-size: 50px; text-align: center;">
    #                     <b>{df_filtrado1 []['']}%</b>
    #                     </p>
    #                     ''', unsafe_allow_html=True)
        
    #     quadro.markdown(f'''
    #                     <p style="font-size: 34px; text-align: center;">
    #                     <b>M√©dia do indicador {}</b>
    #                     </p>
    #                     ''',unsafe_allow_html=True)
            
    st.markdown ('---')

    st.markdown('## ‚öôÔ∏è Modelos de Insight')

    # sele√ß√£o de modelo
    model = st.selectbox('Selecione o modelo:', ['An√°lise por Aluno', 'Desempenho Acad√™mico', 'Desempenho Psicopedag√≥gica', 'Desempenho Psicossocial', 'Pedras', 'Ponto de Virada'])
    # st.sidebar.title('‚öôÔ∏è Modelos')

    st.markdown('<br>', unsafe_allow_html=True)
         # texto

    
    if model == 'An√°lise por Aluno':
        st.subheader('An√°lise por Aluno', divider='orange')

        st.markdown('''
            <p style="font-size: 18px">
                O XGBoost, ou <i>Extreme Gradient Boosting</i>, √© um algoritmo de aprendizado de m√°quina supervisionado e baseado em √°rvores de decis√£o.
                O modelo √© uma implementa√ß√£o otimizada do Gradient Boosting e pode ser utilizado para problemas de regress√£o e classifica√ß√£o. O XGBoost √© 
                amplamente utilizado em competi√ß√µes de ci√™ncia de dados e √© conhecido por sua efici√™ncia e desempenho.
                <br>
            </p>
            ''', unsafe_allow_html=True)

        if 'multi' not in st.session_state: 
            st.session_state['multi'] = []

        if 'ano_selecionado' not in st.session_state:
            st.session_state['ano_selecionado'] = None

        if 'turma_selecionada' not in st.session_state:
            st.session_state['turma_selecionada'] = None

        if 'fase_selecionada' not in st.session_state:
            st.session_state['fase_selecionada'] = None

        if 'comparador_inde' not in st.session_state:
            st.session_state['comparador_inde'] = 'Nenhum'

        if 'valor_inde' not in st.session_state:
            st.session_state['valor_inde'] = 0

        df_aluno = df.set_index('NOME')
        
        col7, col8= st.columns([3,1])

        with col7:
            def clear_multi():
                st.session_state.multiselect = []
                return
                
            multi = st.multiselect('Selecione um ou mais alunos', df_aluno.index.unique(), key='multiselect')
            st.button("Limpar alunos", on_click=clear_multi)
                            
        with col8:
            anos_disponiveis = df['ANO'].unique()
            ano_selecionado = st.selectbox('Selecione o ano', [None] + list(anos_disponiveis), key='ano_selecionado')

        col9, col10, col11, col12 = st.columns(4)

        with col9:
            turmas_disponiveis = df['TURMA'].unique()
            turma_selecionada = st.selectbox('Selecione a turma', [None] + list(turmas_disponiveis), key='turma_selecionada')

        with col10:
            fases_disponiveis = df['FASE'].unique()
            fase_selecionada = st.selectbox('Selecione a fase', [None] + list(fases_disponiveis), key='fase_selecionada')

        with col11:
            comparador_inde = st.selectbox('Filtrar INDE por', ['Nenhum', 'Maior que', 'Menor que'], key='comparador_inde')

        with col12:
            valor_inde = st.number_input('Digite o valor para o INDE', step=1, key='valor_inde')

        df_filtrado = df_aluno.copy()
        df_filtrado['PONTO_VIRADA'] = df_filtrado['PONTO_VIRADA'].replace({0: 'N√£o', 1: 'Sim'})

        def reset_filters():
            st.session_state['aluno_selecionado'] = []
            st.session_state['ano_selecionado'] = None
            st.session_state['turma_selecionada'] = None
            st.session_state['fase_selecionada'] = None
            st.session_state['comparador_inde'] = 'Nenhum'
            st.session_state['valor_inde'] = 0

        st.button('Limpar Filtros', on_click=reset_filters)

        if multi:
            df_filtrado = df_filtrado[df_filtrado.index.isin(multi)]

        if ano_selecionado:
            df_filtrado = df_filtrado[df_filtrado['ANO'] == ano_selecionado]

        if turma_selecionada:
            df_filtrado = df_filtrado[df_filtrado['TURMA'] == turma_selecionada]

        if fase_selecionada:
            df_filtrado = df_filtrado[df_filtrado['FASE'] == fase_selecionada]

        if comparador_inde == 'Maior que':
            df_filtrado = df_filtrado[df_filtrado['INDE'] > valor_inde]
        elif comparador_inde == 'Menor que':
            df_filtrado = df_filtrado[df_filtrado['INDE'] < valor_inde]
       
        # Estilo CSS para ajustar a largura da tabela
        st.markdown(
            """
            <style>
            .dataframe-container {
                display: flex;
                justify-content: flex-start;
                width: 100%;
            }
            .dataframe-container > div {
                width: 100%;
            }
            </style>
            """, unsafe_allow_html=True
        )

        # Cont√™iner para aplicar o estilo apenas √† tabela
        st.markdown('<div class="dataframe-container">', unsafe_allow_html=True)
        st.dataframe(df_filtrado)
        st.markdown('</div>', unsafe_allow_html=True)


    elif model == 'Desempenho Acad√™mico':
        st.subheader('Desempenho Acad√™mico', divider='orange')

         # texto
        st.markdown('''
                    <p style="font-size: 18px">
                        O XGBoost, ou <i>Extreme Gradient Boosting</i>, √© um algoritmo de aprendizado de m√°quina supervisionado e baseado em √°rvores de decis√£o.
                        O modelo √© uma implementa√ß√£o otimizada do Gradient Boosting e pode ser utilizado para problemas de regress√£o e classifica√ß√£o. O XGBoost √© 
                        amplamente utilizado em competi√ß√µes de ci√™ncia de dados e √© conhecido por sua efici√™ncia e desempenho.
                        <br>
                    </p>
                    ''', unsafe_allow_html=True)        
    
    elif model == 'Desempenho Psicopedag√≥gica':
        st.subheader('Desempenho Psicopedag√≥gica', divider='orange')

         # texto
        st.markdown('''
                    <p style="font-size: 18px">
                        O XGBoost, ou <i>Extreme Gradient Boosting</i>, √© um algoritmo de aprendizado de m√°quina supervisionado e baseado em √°rvores de decis√£o.
                        O modelo √© uma implementa√ß√£o otimizada do Gradient Boosting e pode ser utilizado para problemas de regress√£o e classifica√ß√£o. O XGBoost √© 
                        amplamente utilizado em competi√ß√µes de ci√™ncia de dados e √© conhecido por sua efici√™ncia e desempenho.
                        <br>
                    </p>
                    ''', unsafe_allow_html=True)
        
    elif model == 'Desempenho Psicossocial':
        st.subheader('Desempenho Psicossocial', divider='orange')

         # texto
        st.markdown('''
                    <p style="font-size: 18px">
                        O XGBoost, ou <i>Extreme Gradient Boosting</i>, √© um algoritmo de aprendizado de m√°quina supervisionado e baseado em √°rvores de decis√£o.
                        O modelo √© uma implementa√ß√£o otimizada do Gradient Boosting e pode ser utilizado para problemas de regress√£o e classifica√ß√£o. O XGBoost √© 
                        amplamente utilizado em competi√ß√µes de ci√™ncia de dados e √© conhecido por sua efici√™ncia e desempenho.
                        <br>
                    </p>
                    ''', unsafe_allow_html=True)
        
    elif model == 'Pedras':
        st.subheader('Pedras', divider='orange')

         # texto
        st.markdown('''
                    <p style="font-size: 18px">
                        O XGBoost, ou <i>Extreme Gradient Boosting</i>, √© um algoritmo de aprendizado de m√°quina supervisionado e baseado em √°rvores de decis√£o.
                        O modelo √© uma implementa√ß√£o otimizada do Gradient Boosting e pode ser utilizado para problemas de regress√£o e classifica√ß√£o. O XGBoost √© 
                        amplamente utilizado em competi√ß√µes de ci√™ncia de dados e √© conhecido por sua efici√™ncia e desempenho.
                        <br>
                    </p>
                    ''', unsafe_allow_html=True)
        
    else:
        st.subheader('Ponto de Virada', divider='orange')

         # texto
        st.markdown('''
                    <p style="font-size: 18px">
                        O XGBoost, ou <i>Extreme Gradient Boosting</i>, √© um algoritmo de aprendizado de m√°quina supervisionado e baseado em √°rvores de decis√£o.
                        O modelo √© uma implementa√ß√£o otimizada do Gradient Boosting e pode ser utilizado para problemas de regress√£o e classifica√ß√£o. O XGBoost √© 
                        amplamente utilizado em competi√ß√µes de ci√™ncia de dados e √© conhecido por sua efici√™ncia e desempenho.
                        <br>
                    </p>
                    ''', unsafe_allow_html=True)

# conclus√£o
elif page == page_3:
    # t√≠tulo
    st.title('Conclus√£o')
    # separador
    st.markdown('<br>', unsafe_allow_html=True)
    # texto
    st.markdown('''
                <p style="font-size: 20px">
                    Neste projeto, foram treinados dois modelos para prever o pre√ßo do petr√≥leo Brent: XGBoost e Prophet.
                    <br><br>
                    O modelo XGBoost obteve <b>RMSE de 15.89</b>, <b>MAE de 12.31</b> e <b>MAPE de 16.06%</b>, 
                    o modelo Prophet obteve <b>RMSE de 10.73</b>, <b>MAE de 6.14</b> e <b>MAPE de 12.11%</b>. 
                    Com base nas configura√ß√µes atuais, o modelo Prophet obteve melhores m√©tricas de avalia√ß√£o.
                    <br>
                </p>
                ''', unsafe_allow_html=True)

    st.markdown('<br>', unsafe_allow_html=True)
    
    st.markdown('---')
    
    # pr√≥ximos passos
    st.markdown('''## Principais Insights''')
    
    # texto
    st.markdown('''
                <p style="font-size: 18px">
                    Os principais <i>insights</i> e respectivas etapas de melhorias ao projeto,
                    obtidos durante os processos de an√°lise dos dados e constru√ß√£o dos modelos, s√£o retratados a seguir:
                    <br>
                </p>
                ''', unsafe_allow_html=True) 
                
    # melhoria do modelo XGBoost
    st.markdown('''#### Melhoria do Modelo XGBoost''')
    # texto
    st.markdown('''
                <p style="font-size: 18px">
                    - <b>Pr√≥ximo passo:</b> utilizar outros modelos para que o XGBoost possa extrapolar previs√µes para 
                      al√©m dos limites dos dados de treinamento.
                <br>
                </p>
                ''', unsafe_allow_html=True)    
    
    create_insight(
                    'Extrapola√ß√£o de Dados na Previs√£o',
                    '''
                        O modelo XGBoost, assim como quaisquer algoritmos baseados em √°rvore, 
                        possui uma desvantagem para tarefas de regress√£o: suas predi√ß√µes respeitar√£o os 
                        limites dos dados utilizados no treinamento. Ou seja, existe dificuldade em <b>extrapolar</b> os 
                        valores m√°ximo e m√≠nimo do intervalo de dados de treinamento. Por isso, se faz interessante 
                        combinar esse modelo a outros, como modelos lineares ou mesmo Redes Neurais Recorrentes, 
                        como <i>Long Short-Term Memory</i> (LSTM).
                    '''
                    )

    st.markdown('<br>', unsafe_allow_html=True)

    # t√≠tulo
    st.markdown('''#### Modelos de *Ensemble Learning*''')
    # texto
    st.markdown('''
                <p style="font-size: 18px">
                    O pre√ßo do petr√≥leo √© influenciado por diversos fatores, como oferta e demanda.
                    Al√©m disso, eventos globais, como guerras e desastres naturais, tamb√©m podem afet√°-lo.
                    Logo, essa s√©rie temporal n√£o √© estacion√°ria e possui comportamento n√£o linear. Fatos inesperados, 
                    como os apresentados na se√ß√£o "An√°lise", n√£o s√£o facilmente capturados por um √∫nico modelo.<br><br>
                    - <b>Pr√≥ximo passo:</b> empregar a t√©cnica de <i>ensemble learning</i> para combinar modelos.
                    <br>
                </p>
                ''', unsafe_allow_html=True)
    
    # criar insight
    create_insight('Complexidade do Pre√ßo do Petr√≥leo', 
                   '''
                        Sugere-se a utiliza√ß√£o de <i>ensemble learning</i> para combinar modelos de previs√£o.
                        Esses modelos n√£o precisam se voltar apenas ao pre√ßo do petr√≥leo, mas tamb√©m a outros fatores fundamentais - como produ√ß√£o e mercado.<br>
                        Um modelo de classifica√ß√£o para prever "alta" ou "baixa" do pre√ßo do petr√≥leo pode compor uma <i>feature</i> adicional.<br>
                        Redes Neurais Convolucionais, ou <i>Convolutional Neural Networks</i> (CNN) s√£o eficazes para an√°lise de imagens de sat√©lite e previs√£o de eventos clim√°ticos.
                        CNNs tamb√©m podem ser usadas para previs√£o, a partir de gr√°ficos de <i>candlestick</i>, utilizados por <i>traders</i> para an√°lise t√©cnica.
                    ''')
    
    st.markdown('<br>', unsafe_allow_html=True)
    
    st.markdown('''#### An√°lise de Sentimentos & Mercado Futuro''')

    st.markdown('''
                <p style="font-size: 18px">
                    A an√°lise de sentimentos √© uma t√©cnica de Processamento de Linguagem Natural,
                    ou <i>Natural Language Processing</i> (NLP), que visa identificar e classificar a polaridade 
                    emocional de um texto. Ela utiliza algoritmos e modelos de aprendizado de m√°quina para 
                    atribuir uma pontua√ß√£o de sentimento a cada trecho, indicando se √© positivo, negativo ou neutro.
                    Para melhoria do modelo, um passo importante √© a constru√ß√£o de uma <i>feature</i> que 
                    capture a opini√£o p√∫blica sobre o mercado de petr√≥leo em tempo real, a partir de not√≠cias e redes sociais. 
                    Implementar esses sentimentos no modelo ajuda a incorporar tend√™ncias emergentes e 
                    mudan√ßas de humor que n√£o seriam capturadas apenas por dados hist√≥ricos de pre√ßos.<br><br>
                    - <b>Pr√≥ximo passo:</b> integrar o modelo com outras fontes de dados sobre o mercado de futuro.
                    <br>
                </p>
                ''', unsafe_allow_html=True)

    create_insight('Mercado Futuro & An√°lise de Sentimento', 
                     '''
                        A an√°lise de sentimento tamb√©m contribui para a estabilidade das previs√µes, 
                        conforme medido pelo EV (<i>Error Variance</i>, ou Vari√¢ncia do Erro). A adi√ß√£o de sentimentos extra√≠dos por textos 
                        tende a estabilizar os resultados, reduzindo a variabilidade das previs√µes e tornando-as mais confi√°veis.<br>
                        Al√©m disso, criar features baseadas em contratos futuros de petr√≥leo e ajudar√° a 
                        entender dados de extra√ß√£o e estoque. Tamb√©m, o volume de transa√ß√µes no mercado de futuro √© componente essencial para o c√°lculo 
                        de outros indicadores t√©cnicos, como o <i>Open Interest</i>, que mede o n√∫mero de contratos em aberto.
                      ''')
    
    st.markdown('<br>', unsafe_allow_html=True)    
    
    # t√≠tulo
    st.markdown('''#### Database na Nuvem''')
    # texto
    st.markdown('''
                <p style="font-size: 18px">
                    MLOps √© uma pr√°tica que visa integrar o desenvolvimento de modelos de Machine Learning 
                    com a opera√ß√£o de sistemas. Para essa etapa, √© importante criar um pipeline de dados.<br><br>
                    - <b>Pr√≥ximo passo:</b> <i>deploy</i> da aplica√ß√£o na nuvem, com a Amazon Web Services (AWS).<br>
                        * <b>Amazon S3</b> para armazenamento do modelo<br>
                        * <b>Amazon Redshift</b> para armazenamento dos dados estruturados<br>
                        * <b>Amazon Glue</b> para ETL - <i>Extract Transform Load</i><br>
                        * <b>Amazon SageMaker</b> para treinamento de modelos de Machine Learning<br>
                </p>
                ''', unsafe_allow_html=True)

    # criar insight
    create_insight(
                    'Vantagens de um Database na Nuvem',
                   '''
                        - Escalabilidade: aumenta ou diminui a capacidade de armazenamento conforme a demanda.<br>
                        - Seguran√ßa: os dados s√£o armazenados em servidores seguros e protegidos por criptografia.<br>
                        - Acessibilidade: os dados podem ser acessados de qualquer lugar e a qualquer momento.<br>
                        - Backup: salvamento autom√°tico de dados, que podem ser recuperados em caso de falhas.<br>
                        - Integra√ß√£o: integra√ß√£o com outras ferramentas, como pipelines de dados e APIs.
                        '''
                     )
    
    st.markdown('<br>', unsafe_allow_html=True)
    
    st.markdown('''#### Desenvolver API''')

    st.markdown('''<p style="font-size: 18px">
                API, ou <i>Application Programming Interface</i>, √© um conjunto de regras e protocolos que 
                permitem a comunica√ß√£o entre sistemas.<br><br>
                - <b>Pr√≥ximo passo:</b> criar API para disponibilizar o modelo para usu√°rios e outras aplica√ß√µes.
                <br>
                </p>
                ''', unsafe_allow_html=True)
                        
    # criar insight
    create_insight('API', 
                   '''
                        - Facilita o acesso √†s previs√µes do modelo, permitindo que outras aplica√ß√µes e sistemas consumam os dados.<br>
                        - Pode ser utilizada para criar dashboards, relat√≥rios e aplica√ß√µes web que consomem as previs√µes do modelo.<br>
                        - Permite integra√ß√£o com outros sistemas, como CRMs (<i>Customer Relationship Management</i>) e 
                          ERPs (<i>Enterprise Resource Planning).
                    ''')
    
    st.markdown('<br>', unsafe_allow_html=True)
    
    
# refer√™ncias        
else:
    st.title('Refer√™ncias')
    st.markdown('<br>', unsafe_allow_html=True)
    # subt√≠tulo
    st.header('Fontes de dados')
    st.markdown('''
                <p style="font-size: 18px">
                    Os dados utilizados neste projeto foram obtidos a partir das fontes listadas abaixo:
                </p>
                ''', unsafe_allow_html=True)
    
    # lista de fontes de dados
    st.markdown('''
                #### [**IPEA**](http://www.ipeadata.gov.br/Default.aspx) - Instituto de Pesquisa Econ√¥mica Aplicada
                Portal de dados econ√¥micos do governo brasileiro, disponibiliza dados de diversos indicadores econ√¥micos, 
                como infla√ß√£o, PIB, taxa de juros, c√¢mbio e pre√ßos de *commodities*. As s√©ries temporais podem ser baixadas 
                em formato `.csv`. O IPEA tamb√©m permite acesso atrav√©s de requisi√ß√µes `HTTP` por meio de API.
                ''')
    
    with st.expander('üêç Exibir c√≥digo Python'):
        st.code('''
                # acessar dados do IPEA
                
                !pip install ipeadatapy                 # instalar biblioteca
                import ipeadatapy as ipea               # importar biblioteca
                
                #ipea.list_series()                     # lista de s√©ries dispon√≠veis
                
                df = ip.timeseries(ipea_table_code)     # obter dados do petr√≥leo Brent
                ''')
    
    st.markdown('''
                #### [**FRED**](https://fred.stlouisfed.org/series/DCOILBRENTEU) - Federal Reserve Economic Data
                Banco de dados econ√¥micos mantido pelo Federal Reserve Bank of St. Louis, nos EUA. 
                Ele cont√©m uma vasta quantidade de dados econ√¥micos, incluindo s√©ries temporais de pre√ßos de *commodities*, 
                como o [**petr√≥leo Brent**](https://fred.stlouisfed.org/series/DCOILBRENTEU).
                Os dados podem ser baixados em formato `.csv`. O FRED disponibiliza tamb√©m permite acesso atrav√©s de requisi√ß√µes `HTTP` por meio de API.
                ''')

    with st.expander('üêç Exibir c√≥digo Python'):
        st.code('''
                    # acessar dados do FRED
                    
                    !pip install pandas_datareader            # instalar biblioteca
                    import pandas_datareader as pdr           # importar biblioteca
                    
                    df = pdr.get_data_fred('DCOILBRENTEU')    # obter dados do petr√≥leo Brent
                ''')

    st.markdown('''
                #### [**Yahoo Finance**](https://finance.yahoo.com/quote/CL=F?p=CL=F) - Yahoo Finance
                Plataforma de not√≠cias e dados financeiros, permite acessar cota√ß√µes de ativos, √≠ndices 
                e pre√ßos de *commodities*. Os dados podem ser baixados em formato `.csv` e tamb√©m acessados por meio de API.
                A biblioteca [`yfinance`](https://pypi.org/project/yfinance/) permite acessar os dados do Yahoo Finance diretamente no Python:
                ''')
    
    with st.expander('üêç Exibir c√≥digo Python'):
        st.code('''
                    # acessar dados do Yahoo Finance
                    
                    !pip install yfinance            # instalar biblioteca
                    import yfinance as yf            # importar biblioteca
                    
                    df = yf.download('BZ=F')         # obter dados do petr√≥leo Brent
                ''')

    st.markdown('<br>', unsafe_allow_html=True)
    # subt√≠tulo para Bibliografia
    st.header('Bibliografia')
    # lista de links
    st.markdown('''
                    - [**OPEC**](https://www.opec.org/opec_web/en/about_us/24.htm) - Organization of the Petroleum Exporting Countries
                    - [**CBI**](https://cbie.com.br/) - Centro Brasileiro de Infraestrutura
                    - [**Investopedia**](https://www.investopedia.com/terms/f/futuresmarket.asp) - Futures Market
                    - [**Wikipedia**](https://en.wikipedia.org/wiki/Brent_Crude) - Brent Crude Oil
                    - [**AWS**](https://aws.amazon.com/pt/) - Amazon Web Services
                    - [**Super Interessante**](https://super.abril.com.br/coluna/deriva-continental/nos-bastidores-da-terra-geologa-explica-a-formacao-do-petroleo) - Nos bastidores da Terra: ge√≥loga explica a forma√ß√£o do petr√≥leo
                    - [**Forecasting Oil Price Using Web-based Sentiment Analysis**](https://www.mdpi.com/1996-1073/12/22/4291) - 
                        Energies (2019), por ZHAO, Lu-Tao; ZENG, Guan-Rong; WANG, Wen-Jing; ZHANG, Zhi-Gang
                    - [**An√°lise pr√°tica de s√©ries temporais: predi√ß√£o com estat√≠stica e aprendizado de m√°quina**](https://www.amazon.com.br/An√°lise-Pr√°tica-S√©ries-Temporais-Estat√≠stica/dp/8550815624) - 
                        Alta Books (2021), por NIELSEN, Aileen
                ''')
    
    
# footer
st.markdown('<br>', unsafe_allow_html=True)

st.markdown('---')

# texto -> Agradecimentos
st.markdown('''<p style="font-size: 18px; text-align: center;">
            Obrigado por acompanhar este projeto! üöÄ
            <br>
            </p>''', unsafe_allow_html=True)

# linkedin = 'https://www.linkedin.com/in/viniplima/'
# github = 'https://github.com/euvina/'

# mail = 'pradolimavinicius@gmail.com'
# subject = 'Contato via Streamlit - Projeto Previs√£o de Pre√ßo do Petr√≥leo Brent'

# # √°rea de contato
# st.markdown('''<p style="font-size: 18px; text-align: center;">
#             üìß Entre em contato:<br>
#             <a href="mailto:{}?subject={}">
#             <img src="https://img.shields.io/badge/-Gmail-D14836?style=for-the-badge&logo=Gmail&logoColor=white" alt="Gmail">
#             </a>
#             <a href="{}">
#             <img src="https://img.shields.io/badge/-GitHub-181717?style=for-the-badge&logo=GitHub&logoColor=white" alt="GitHub">
#             </a>
#             <a href="{}">
#             <img src="https://img.shields.io/badge/-LinkedIn-0077B5?style=for-the-badge&logo=LinkedIn&logoColor=white" alt="LinkedIn">
#             </a>
#             </p>'''.format(mail, subject, linkedin, github), unsafe_allow_html=True)
